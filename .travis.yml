branches:
  only:
    - master
dist: trusty # there is a xenial in 0.18.0
os: linux
language: minimal
cache:
  ccache: true
  directories:
    - depends/built
    - depends/sdk-sources
    - $HOME/.ccache
stages:
  - lint
  - test
git:
  depth: false  # full clone for git subtree check, this works around issue bitcoin/bitcoin#12388
env:
  global:
    - MAKEJOBS=-j3
    - RUN_UNIT_TESTS=true
    - RUN_FUNCTIONAL_TESTS=true
    - RUN_FUZZ_TESTS=false
    - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
    - DOCKER_NAME_TAG=ubuntu:18.04
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - WINEDEBUG=fixme-all
    - DOCKER_PACKAGES="build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache"
before_install:
  - set -o errexit; source .travis/test_03_before_install.sh
install:
  - set -o errexit; source .travis/test_04_install.sh
before_script:
  - set -o errexit; source .travis/test_05_before_script.sh
script:
  - if [ $SECONDS -gt 1200 ]; then set +o errexit; echo "Travis early exit to cache current state"; false; else set -o errexit; source .travis/test_06_script_a.sh; fi
  - if [ $SECONDS -gt 1800 ]; then set +o errexit; echo "Travis early exit to cache current state"; false; else set -o errexit; source .travis/test_06_script_b.sh; fi
after_script:
  - echo $TRAVIS_COMMIT_RANGE
  - echo $TRAVIS_COMMIT_LOG
jobs:
  include:

    - stage: lint
      name: 'lint'
      env:
      cache: false
      language: python
      python: '3.6'
      install:
        - set -o errexit; source .travis/lint_04_install.sh
      before_script:
        - set -o errexit; source .travis/lint_05_before_script.sh
      script:
        - set -o errexit; source .travis/lint_06_script.sh

    - stage: test
      name: 'ARM  [GOAL: install]  [no unit or functional tests]'
      env: >-
        HOST=arm-linux-gnueabihf
        PACKAGES="python3 g++-arm-linux-gnueabihf"
        RUN_UNIT_TESTS=false
        RUN_FUNCTIONAL_TESTS=false
        DEP_OPTS="NO_USB=1"
        GOAL="install"
        # -Wno-psabi is to disable ABI warnings: "note: parameter passing for argument of type ... changed in GCC 7.1"
        # This could be removed once the ABI change warning does not show up by default
        UNITE_CONFIG="--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi"

    - stage: test
      name: 'Win32  [GOAL: deploy]  [unit tests]'
      env: >-
        HOST=i686-w64-mingw32
        DPKG_ADD_ARCH="i386"
        PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
        RUN_FUNCTIONAL_TESTS=false
        GOAL="deploy"
        UNITE_CONFIG="--enable-reduce-exports --enable-usbdevice"

    - stage: test
      name: '32-bit + dash  [GOAL: install]  [unit and functional tests]'
      env: >-
        HOST=i686-pc-linux-gnu
        DPKG_ADD_ARCH="i386"
        PACKAGES="g++-multilib python3-zmq libudev-dev:i386"
        GOAL="install"
        UNITE_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++ --enable-usbdevice"
        CONFIG_SHELL="/bin/dash"

    - stage: test
      name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no depends, only system libs]'
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libudev-dev libhidapi-dev libusb-1.0-0-dev"
        NO_DEPENDS=1
        GOAL="install"
        UNITE_CONFIG="--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER --enable-usbdevice"

    - stage: test
      name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no wallet, unit tests]'
      env: >-
        HOST=x86_64-unknown-linux-gnu
        PACKAGES="python3-zmq"
        DEP_OPTS="NO_WALLET=1 NO_USB=1"
        RUN_FUNCTIONAL_TESTS=false
        GOAL="install"
        UNITE_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"

    - stage: test
      name: 'macOS 10.10  [GOAL: deploy] [no tests]'
      env: >-
        HOST=x86_64-apple-darwin14
        PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git"
        OSX_SDK=10.11
        RUN_UNIT_TESTS=false
        RUN_FUNCTIONAL_TESTS=false
        GOAL="deploy"
        UNITE_CONFIG="--enable-reduce-exports --enable-werror --enable-usbdevice"
